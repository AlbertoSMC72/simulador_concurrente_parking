Simulador Concurrente de Estacionamiento en Go
Este proyecto implementa un simulador de estacionamiento utilizando las capacidades de concurrencia del lenguaje Go. El objetivo es modelar la entrada y salida de vehículos en un estacionamiento de manera concurrente, asegurando una gestión eficiente de los espacios disponibles.

Descripción del Proyecto
El simulador permite observar cómo múltiples vehículos intentan estacionarse simultáneamente, gestionando la disponibilidad de espacios y evitando condiciones de carrera mediante el uso de goroutines y canales.

Características Principales
Concurrencia con Goroutines: Cada vehículo se representa como una goroutine independiente, simulando su llegada, estacionamiento y salida.

Comunicación Segura con Canales: Se utilizan canales para coordinar la asignación y liberación de espacios de estacionamiento entre las goroutines de los vehículos.

Sincronización Eficiente: Implementación de mecanismos de sincronización para evitar condiciones de carrera y asegurar la integridad de los datos compartidos.

Estructura del Proyecto
main.go: Punto de entrada de la aplicación. Inicia la simulación y coordina las goroutines.

models/: Contiene las definiciones de las estructuras principales, como Car y ParkingLot.

controllers/: Implementa la lógica de negocio, incluyendo la gestión de la entrada y salida de vehículos.

views/: Maneja la interfaz de usuario, proporcionando una visualización en tiempo real del estado del estacionamiento.

Requisitos Previos
Go 1.21 o superior.

Fyne: Framework para la interfaz gráfica de usuario.

go mod tidy

go run main.go

Uso
Al ejecutar la aplicación, se iniciará la simulación del estacionamiento. La interfaz gráfica mostrará en tiempo real la entrada y salida de vehículos, así como la ocupación actual del estacionamiento.

Contribuciones
Las contribuciones son bienvenidas. Por favor, abre un issue o envía un pull request con tus mejoras o correcciones.


